diff --git a/libraries/SITL/SIM_Aircraft.cpp b/libraries/SITL/SIM_Aircraft.cpp
index 8b2d8e97b..043d97f81 100644
--- a/libraries/SITL/SIM_Aircraft.cpp
+++ b/libraries/SITL/SIM_Aircraft.cpp
@@ -72,7 +72,7 @@ Aircraft::Aircraft(const char *home_str, const char *frame_str) :
              home.alt*0.01,
              home_yaw);
     location = home;
-    ground_level = home.alt * 0.01f;
+    ground_level = 0;
 
     dcm.from_euler(0.0f, 0.0f, radians(home_yaw));
 
@@ -152,7 +152,6 @@ float Aircraft::ground_height_difference() const
     float h1, h2;
     if (sitl &&
         sitl->terrain_enable && terrain &&
-        terrain->height_amsl(home, h1, false) &&
         terrain->height_amsl(location, h2, false)) {
         return h2 - h1;
     }
@@ -164,7 +163,7 @@ float Aircraft::ground_height_difference() const
 */
 float Aircraft::hagl() const
 {
-    return (-position.z) + home.alt * 0.01f - ground_level - frame_height - ground_height_difference();
+    return (-position.z) + ground_level - frame_height - ground_height_difference();
 }
 /*
    return true if we are on the ground
@@ -182,7 +181,7 @@ void Aircraft::update_position(void)
     location = home;
     location_offset(location, position.x, position.y);
 
-    location.alt  = static_cast<int32_t>(home.alt - position.z * 100.0f);
+    location.alt  = static_cast<int32_t>(position.z * 100.0f);
 
 #if 0
     // logging of raw sitl data
@@ -213,7 +212,7 @@ void Aircraft::update_mag_field_bf()
     mag_ef = R * mag_ef;
 
     // calculate frame height above ground
-    const float frame_height_agl = fmaxf((-position.z) + home.alt * 0.01f - ground_level, 0.0f);
+    const float frame_height_agl = fmaxf((-position.z) + ground_level, 0.0f);
 
     if (!sitl) {
         // running example program
@@ -521,7 +520,7 @@ void Aircraft::update_dynamics(const Vector3f &rot_accel)
             printf("Hit ground at %f m/s\n", velocity_ef.z);
             last_ground_contact_ms = AP_HAL::millis();
         }
-        position.z = -(ground_level + frame_height - home.alt * 0.01f + ground_height_difference());
+        position.z = -(ground_level + frame_height  + ground_height_difference());
 
         switch (ground_behavior) {
         case GROUND_BEHAVIOR_NONE:
@@ -680,7 +679,7 @@ void Aircraft::smooth_sensors(void)
 
     smoothing.location = home;
     location_offset(smoothing.location, smoothing.position.x, smoothing.position.y);
-    smoothing.location.alt  = static_cast<int32_t>(home.alt - smoothing.position.z * 100.0f);
+    smoothing.location.alt  = static_cast<int32_t>(smoothing.position.z * 100.0f);
 
     smoothing.last_update_us = now;
     smoothing.enabled = true;
